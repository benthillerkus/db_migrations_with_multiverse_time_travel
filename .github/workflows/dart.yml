# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.getpackages.outputs.paths }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: dart-lang/setup-dart@v1

      - id: getpackages
        run: |
          paths = "dart pub workspace list --json | jq -r -c '[.packages[] | select(.name != "workspace") | .path]'"
          echo $paths
          echo "paths=$paths" >> $GITHUB_OUTPUT

  build:
    needs: packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        dart: ['3.5.0', stable]
        package: ${{ needs.packages.outputs.packages }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.dart }}

      - name: Install sqlite3
        run: sudo apt install sqlite3 

      - name: Install dependencies
        run: dart pub get

      - name: Run tests
        run: |
          cd ${{ matrix.package }}
          dart test

  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - uses: dart-lang/setup-dart@v1

      - name: Install dependencies
        run: dart pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: dart analyze

